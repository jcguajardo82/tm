

//comentamos esto porque al parecer estaba dañando los checkbox, pero no fue así
// hay que evaluar si lo volvemos a agregar
// var response = {};

$.fn.formToJson = function () {
    // initialize the response
    var response = {};

    var formArray = $(this).serializeArray();
    

    $.each(formArray, function (index, item) {
        var name = item.name;
        var value = item.value;

        //convertimos a objeeto
        stringToObj(0, name, value, response);
        
    });

    return response;
}


function stringToObj(index, strObjName, value, response) {
    //revisamos el key, para ver si es de tipo object o no
    var arrObj = strObjName.split('.');
    if (arrObj.length > 1) {
        createObj(arrObj, 0, value, {}, response);
    } else {
        response[strObjName] = value;
    }

  
    return response;
}
function createObj(arrObj, index, value, responseTmp, response) {
    var newKey = arrObj[index];
   
    // ya llegamos al final de la longitud del objto (terminamos de armar el objeto) ?
    if (index == arrObj.length - 1) {
      
        if (responseTmp[newKey] == undefined) {
            responseTmp[newKey] = value;
        } else {
            var valTmp = responseTmp[newKey];
            responseTmp[newKey] = [];
            responseTmp[newKey].push(valTmp); 
            responseTmp[newKey].push(value); 
        }

    } else {
        index++;
        responseTmp[newKey] = {};
        responseTmp[newKey] = createObj(arrObj, index, value, responseTmp[newKey]);
      
       
        if (response[newKey] == undefined) {
            response[newKey] = responseTmp[newKey];
        } else {
            
            //en está parte entra cuando se trata de un object
            $.each(responseTmp[newKey], function (newIndex, newValue) {
                if (response[newKey][newIndex] == undefined) {
                    response[newKey][newIndex] = newValue;
                } else {
                    var oldValTmp = response[newKey][newIndex];
                    response[newKey][newIndex] = [];

                    if (!$.isArray(oldValTmp)) {
                        response[newKey][newIndex].push(oldValTmp);
                    } else {
                       
                        response[newKey][newIndex] = oldValTmp;
                    }

                    response[newKey][newIndex].push(newValue);
                    
                }
            });
           
        }
    }
   
    return responseTmp;
}





//comentamos esto porque al parecer estaba dañando los checkbox, pero no fue así
// hay que evaluar si lo volvemos a agregar
// var response = {};
$.wrapArray = function (data) {
    console.log(data);
    var response = [];

    // Armo el objeto que voy a procesar
    var itemObjTemplate = {}; 
    var isGT0 = false;
    var lengthValues = 0;
    $.each(data, function (key, item) {
      
        if (Array.isArray(item) && item.length > 1) {
            isGT0 = true;
        }

        if (lengthValues < item.length) {
            lengthValues = item.length;
        }
        itemObjTemplate[key] = null;
    });

    if (isGT0) {
        //Prepoblamos el array con el objet que se va a procesar
        for (var i = 0; i < lengthValues; i++) {
            var objTmp = Object.assign({}, itemObjTemplate);
            response.push(objTmp);
        }
    } else {
        var objTmp = Object.assign({}, itemObjTemplate);
        response.push(objTmp);
    }

    
    //Llena cada objeto del array
    $.each(data, function (key, value) {
        if (value != undefined && value != null && Array.isArray(value)) {
            $.each(value, function (indexValue, itemValue) {
                response[indexValue][key] = itemValue;
            });
        } else {
            response[0][key] = value;
        }
    });
    
    return response;
}